name: Python Tests
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_call:

# permissions:
#   id-token: write   # This is required for requesting the JWT
#   contents: read    # This is required for actions/checkout

jobs:
  lint:
    name: Check Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Deps
        run: pip install -r lawbox-landing/requirements.txt
      - name: Check for Syntax Erros
        working-directory: lawbox-landing
        run: python -m pylint api --errors-only
      - name: Show Pylint Warnings
        working-directory: lawbox-landing
        run: python -m pylint api --exit-zero
  validate:
    name: Validate API Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Deps
        run: pip install openapi-spec-validator
      - name: Validate
        run: openapi-spec-validator lawbox-landing/api/api-spec.yml
  test:
    name: Tests
    needs:
      - lint
    runs-on: ubuntu-latest
    env:
      HOST: localhost
      DBPW: password
      PORT: 54320
    services:
      ecommerce-db:
        image: postgres:16-alpine 
        env:
          POSTGRES_PASSWORD: ${{env.DBPW}}
          POSTGRES_DB: lawbox-landing
        ports:
          - 54320:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Deps
        run: pip install -r lawbox-landing/requirements.txt
      - name: Initialize DB
        run: |
          psql postgresql://postgres:${{env.DBPW}}@${{env.HOST}}:${{env.PORT}}/lawbox-landing -f lawbox-landing/db/init.sql
      - name: Tests
        run: pytest --cov=api -o log_cli=true lawbox-landing/api/test
